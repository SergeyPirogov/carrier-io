---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
  - vars/default.yml
  tasks:
    - name: Prepare folders
      file:
        path: /opt/carrier
        state: directory
        mode: '0755'

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'git', 'ca-certificates', 'curl', 'software-properties-common', 'python-pip', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install Docker-compose Module for Python
      pip:
        name: docker-compose

    - git:
        repo: https://github.com/carrier-io/carrier-io.git
        dest: /opt/carrier/
      ignore_errors: yes

    - name: Ansible replace string example
      replace:
        path: /opt/carrier/dev/.env
        regexp: 'http://localhost'
        replace: "http://{{ APP_HOST }}"

    - name: Ansible replace string example
      replace:
        path: /opt/carrier/dev/.env
        regexp: '/opt/carrier'
        replace: "{{ CARRIER_PATH }}"

    - name: Create and start services
      docker_compose:
        project_src: /opt/carrier/dev
      register: output

    - name: sleep
      command: sleep 40

    - name: HTTPS required
      command: ./https_required.sh
      register: output

    - debug:
        var: output
